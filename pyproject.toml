[tool.poetry]
name = "ecs_composex"
version = "0.20.0"
description = "Manage, Configure and Deploy your services and AWS services and applications from your docker-compose definition"
authors = ["John Preston <john@compose-x.io>"]
maintainers = ["John Preston <john@compose-x.io>"]
license = "MPL-2.0"
readme = "README.rst"
keywords = ["compose-x", "aws", "cloudformation", "docker", "compose"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Information Technology",
  "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]
include = [
  "LICENSE",
  "MANIFEST.in",
  "NOTICES.rst",
  "ecs_composex/**/*.json"
]
exclude = ["*.pyc", "*~", "*pycache*"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/compose-x/ecs_composex/issues"
"Labs" = "https://labs.compose-x.io/"
"Blog" = "https://blog.compose-x.io/"
"Documentation" = "https://docs.compose-x.io/"

[tool.poetry.dependencies]
python = "^3.7"
boto3 = ">=1.20"
troposphere = "^4.0.0"
ecr-scan-reporter = { version = "^0.4.6", optional = true }
compose-x-render = "^0.5"
compose-x-common = "^0.5"
jsonschema = "^4.4.0"
requests = "^2.27.1"
tabulate = "^0.8.9"
importlib-resources = "^5.4.0"
PyYAML = "^6.0"
urllib3 = "^1.26.8"
retry2 = "^0.9.3"

[tool.poetry.dev-dependencies]
isort = "^5.10.1"
placebo = "^0.10.0"
pre-commit = "^2.17.0"
black = "^22.3.0"
sphinx-material = "^0.0.34"
behave = "^1.2.6"
coverage = { extras = ["toml"], version = "^6.3.2" }
flake8 = "^3.9.2"
pytest = "^6.2.5"
Sphinx = "^4.5.0"
tox = "^3.24.5"
tbump = "6.5.0"
sphinx-jsonschema = "^1.17.2"
boto3-stubs = { extras = ["acm", "ecs", "cloudformation", "essential"], version = "^1.21.18" }
pyclean = "^2.1.0"
sphinx-autodoc-typehints = "^1.17.0"
pyupgrade = "^2.31.1"

[tool.poetry.scripts]
ecs-compose-x = "ecs_composex.cli:main"
ecs_compose_x = "ecs_composex.cli:main"
compose-x = "ecs_composex.cli:main"

[tool.poetry.extras]
ecrscan = ["ecr-scan-reporter"]

[tool.tbump]
github_url = "https://github.com/compose-x/ecs_composex"

[tool.tbump.version]
current = "0.20.0"

regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  (?:(?P<rc>[\S]+))?
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "ecs_composex/__init__.py"

[[tool.tbump.before_commit]]
name = "Files format"
cmd = "make conform"

[[tool.tbump.before_commit]]
name = "Update SAM Policies templates"
cmd = "python .scripts/import_sam_policies_template.py"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
known_first_party = "kelvin"

[tool.coverage.report]
exclude_lines = [
  "if __name__ == '__main__'"
]
[tool.coverage.run]
omit = [
  "*/cli.py"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
